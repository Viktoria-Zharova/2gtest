const fs = require('fs');
const path = require('path');

console.log('üîç –ü–†–û–í–ï–†–ö–ê –ú–û–î–ï–õ–ï–ô...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞–ø–∫–∏ —Å –º–æ–¥–µ–ª—è–º–∏
const folders = [
  'src/assets/models',
  'src/assets/models_optimized', 
  'src/assets/models_draco',
  'src/assets/models_draco_fixed'
];

folders.forEach(folder => {
  if (fs.existsSync(folder)) {
    const files = fs.readdirSync(folder).filter(f => f.endsWith('.glb'));
    console.log(`üìÅ ${folder}: ${files.length} –º–æ–¥–µ–ª–µ–π`);
    if (files.length > 0) {
      const sampleFile = path.join(folder, files[0]);
      const stats = fs.statSync(sampleFile);
      console.log(`   –ü—Ä–∏–º–µ—Ä: ${files[0]} - ${(stats.size/1024/1024).toFixed(2)} MB`);
    }
  } else {
    console.log(`‚ùå ${folder} - –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
  }
});

console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
console.log('1. –ù–∞–π–¥–∏—Ç–µ –ø–∞–ø–∫—É —Å –ù–ï–°–ñ–ê–¢–´–ú–ò –º–æ–¥–µ–ª—è–º–∏ (–æ–±—ã—á–Ω–æ 7-10 MB –∫–∞–∂–¥–∞—è)');
console.log('2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–ï –º–æ–¥–µ–ª–∏ –¥–ª—è Draco-—Å–∂–∞—Ç–∏—è');
console.log('3. –¢–µ–∫—É—â–∏–µ –º–æ–¥–µ–ª–∏ –≤ models_draco —É–∂–µ —Å–∂–∞—Ç—ã –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã');